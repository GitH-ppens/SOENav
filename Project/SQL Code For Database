-- Master course list
CREATE TABLE CourseList(
    id INT AUTO_INCREMENT PRIMARY KEY,
    SchoolCode INT,
    DepartmentCode INT, 
    CourseCode INT, 
    CourseName CHAR(25)
);

-- Users table with extended fields
CREATE TABLE Users(
    id INT AUTO_INCREMENT PRIMARY KEY,
    StudentName CHAR(40) NOT NULL,
    UserPassword CHAR(10) NOT NULL,
    Major VARCHAR(100) NOT NULL,
    CollegeYear VARCHAR(20) NOT NULL,
    IsTransfer BOOLEAN NOT NULL
);

-- Past course history
CREATE TABLE PastEnrollments(
    SchoolCode INT,
    DepartmentCode INT, 
    CourseCode INT, 
    CourseName CHAR(25),
    student_id INT,
    course_id INT,
    Grade CHAR(3),
    PRIMARY KEY (student_id, course_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES CourseList(id) ON DELETE CASCADE
);

-- Future planned courses
CREATE TABLE PlannedCourses(
    id INT AUTO_INCREMENT PRIMARY KEY,
    SchoolCode INT,
    DepartmentCode INT, 
    CourseCode INT, 
    CourseName CHAR(25)
);

-- Registered but not yet completed courses
CREATE TABLE RegisteredCourses(
    id INT AUTO_INCREMENT PRIMARY KEY,
    SchoolCode INT,
    DepartmentCode INT, 
    CourseCode INT, 
    CourseName CHAR(25)
);

-- Active course enrollments
CREATE TABLE Enrollments(
    student_id INT,
    course_id INT,
    PRIMARY KEY (student_id, course_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES CourseList(id) ON DELETE CASCADE
);

-- Majors offered
CREATE TABLE EngineeringMajors(
    id INT AUTO_INCREMENT PRIMARY KEY,
    MajorName VARCHAR(100) NOT NULL,
    DegreeType VARCHAR(20) DEFAULT 'B.S.'
);

-- Notes system
CREATE TABLE Notes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    note_text TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    category VARCHAR(255),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE
);

-- Notification system
CREATE TABLE Notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    course_code VARCHAR(50),
    subject_code VARCHAR(10),
    semester VARCHAR(10),
    notified BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE
);

-- Personal calendar / planner
CREATE TABLE CoursePlannerEvents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    eventName VARCHAR(255) NOT NULL,
    eventDay VARCHAR(255) NOT NULL,
    startTime TIME NOT NULL,
    endTime TIME NOT NULL,
    student_id INT NOT NULL,
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE
);

-- Requirement tables per major (denormalized approach)
CREATE TABLE AerospaceEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE PackagingEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE BiomedicalEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE ChemicalEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE CivilEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE ElectricalComputerEngineeringComputerOptionRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE ElectricalComputerEngineeringElectricalOptionRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE EnvironmentalEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE IndustrialSystemsEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE MaterialsScienceEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);

CREATE TABLE MechanicalEngineeringRequirements(
    id INT AUTO_INCREMENT PRIMARY KEY,
    degreePoint INT,
    program VARCHAR(255),
    reqID VARCHAR(10),
    reqTitle VARCHAR(255),
    courses TEXT
);




CREATE TABLE AerospaceEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES AerospaceEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE PackagingEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES PackagingEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE BiomedicalEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES BiomedicalEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE ChemicalEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES ChemicalEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE CivilEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES CivilEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE ElectricalComputerEngineeringComputerOptionStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES ElectricalComputerEngineeringComputerOptionRequirements(id) ON DELETE CASCADE
);

CREATE TABLE ElectricalComputerEngineeringElectricalOptionStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES ElectricalComputerEngineeringElectricalOptionRequirements(id) ON DELETE CASCADE
);

CREATE TABLE EnvironmentalEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES EnvironmentalEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE IndustrialSystemsEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES IndustrialSystemsEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE MaterialsScienceEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES MaterialsScienceEngineeringRequirements(id) ON DELETE CASCADE
);

CREATE TABLE MechanicalEngineeringStudents (
    student_id INT NOT NULL,
    major_id INT NOT NULL,
    PRIMARY KEY (student_id, major_id),
    FOREIGN KEY (student_id) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (major_id) REFERENCES MechanicalEngineeringRequirements(id) ON DELETE CASCADE
);

INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R5', 'Junior Year - Fall', '{01:640:421}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R5', 'Junior Year - Fall', '{14:650:351}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R5', 'Junior Year - Fall', '{14:650:312}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R5', 'Junior Year - Fall', '{14:650:350}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R7', 'Senior Year - Fall', '{14:650:431}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R7', 'Senior Year - Fall', '{14:650:467}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R7', 'Senior Year - Fall', '{14:650:481}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R7', 'Senior Year - Fall', '{MAE Departmental Electives}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R7', 'Senior Year - Fall', '{MAE Technical Electives (14:332:231)}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R9', 'Humanities/Social Science Electives', '{Engineering General Electives (01:355:100, 01:640:250)}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R9', 'Humanities/Social Science Electives', '{Current H/SS Electives Engineering (01:220:102, 01:730:103)}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R9', 'Humanities/Social Science Electives', '{Current Upper Level H/SS Electives Engineering (01:830:321, 07:965:230)}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{01:160:171, Alternate Chemistry Lab Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{01:160:160, Alternate Chemistry 2 Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{01:640:152, Alternate Calculus II Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{01:750:124, Alternate Physics IB Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{14:440:127, 14:440:102, Alternate Engineering Computing Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R2', 'First Year - Spring', '{14:440:221, Alternate Engineering Mechanics: Statics Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R4', 'Sophomore Year - Spring', '{01:640:244, Alternate Differential Equations Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R4', 'Sophomore Year - Spring', '{14:650:291}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R4', 'Sophomore Year - Spring', '{14:650:361}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R4', 'Sophomore Year - Spring', '{01:750:228, Alternate Physics IIB Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R4', 'Sophomore Year - Spring', '{01:750:230, Alternative Analytical Physics II Laboratory Courses}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R6', 'Junior Year - Spring', '{14:650:342}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R6', 'Junior Year - Spring', '{14:540:343}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R6', 'Junior Year - Spring', '{14:650:439}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R6', 'Junior Year - Spring', '{14:635:407}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R8', 'Senior Year - Spring', '{14:650:432, 14:650:433, 14:650:435}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R8', 'Senior Year - Spring', '{14:650:468}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R8', 'Senior Year - Spring', '{14:650:401}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R8', 'Senior Year - Spring', '{MAE Departmental Electives}');
INSERT INTO MechanicalEngineeringRequirements (degreePoint, program, reqID, reqTitle, courses) VALUES (8644, 'Mechanical Engineering (NB)', 'R8', 'Senior Year - Spring', '{MAE Technical Electives (14:332:252)}');
